<?xml version="1.0" encoding="UTF-8"?>

<project name="SimpleRoles" default="build" basedir="../">

    <property name="dbname" value="simpleRoles"/>
    <property name="dbhost" value="localhost"/>
    <property name="dbport" value="3306"/>

    <target name="build"
            depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpunit"/>


    <target name="travis" description="Travis CI Build" depends="prepare,lint,phpunit-travis"/>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete dir="${basedir}/build/behat"/>
        <delete dir="${basedir}/junit"/>
    </target>

    <target name="prepare" depends="clean"
            description="Prepare for build">
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
    </target>

    <target name="lint">
        <apply executable="php" failonerror="true">
            <arg value="-l" />

            <fileset dir="${basedir}/src">
                <include name="**/*.php" />
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg value="--exclude" />
            <arg value="vendor" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="pdepend"
            description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg value="--ignore=${basedir}/tests,${basedir}/vendor"/>
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpmd"
            description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${basedir}" />
            <arg value="text" />
            <arg value="${basedir}/build/phpmd.xml" />
            <arg value="--exclude" />
            <arg value="${basedir}/tests" />
        </exec>
    </target>

    <target name="phpmd-ci"
            description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${basedir}" />
            <arg value="xml" />
            <arg value="${basedir}/build/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
            <arg value="--exclude" />
            <arg value="${basedir}/tests,${basedir}/vendor" />
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=${basedir}/build/phpcs.xml" />
            <arg value="--ignore=*/tests/*" />
            <arg value="--ignore=*/vendor/*"/>
            <arg value="--ignore=*/twitter/*"/>
            <arg value="--extensions=php" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpcs-ci"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=${basedir}/build/phpcs.xml" />
            <arg value="--ignore=*/tests/*" />
            <arg value="--ignore=*/vendor/*"/>
            <arg value="--ignore=*/twitter/*"/>
            <arg value="--extensions=php" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg value="--exclude" />
            <arg value="vendor" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpdoc"
            description="Generate API documentation using PHPDocumentor">
        <exec executable="phpdoc">
            <arg value="--directory" />
            <arg path="${basedir}" />
            <arg value="--target" />
            <arg path="${basedir}/build/api" />
        </exec>
    </target>

    <target name="phpunit-travis" description="Travis phpunit">
        <exec executable="phpunit" failonerror="true">
            <arg value="-c"/>
            <arg path="${basedir}/tests/SimpleRoles/Unit/phpunit.xml"/>
            <arg value="--coverage-html"/>
            <arg path="${basedir}/build/logs/coverage"/>
            <arg value="--coverage-clover"/>
            <arg path="${basedir}/build/logs/clover.xml"/>
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit" depends="db">
        <exec executable="phpunit" failonerror="true">
            <arg value="-c"/>
            <arg path="${basedir}/tests/SimpleRoles/Unit/phpunit.xml"/>
            <arg value="--coverage-html"/>
            <arg path="${basedir}/build/logs/coverage"/>
            <arg value="--coverage-clover"/>
            <arg path="${basedir}/build/logs/clover.xml"/>
        </exec>
    </target>

    <target name="phpcb"
            description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${basedir}/build/logs" />
            <arg value="--source" />
            <arg path="${basedir}" />
            <arg value="--output" />
            <arg path="${basedir}/build/code-browser" />
        </exec>
    </target>

    <target name="behat-run-config" description="Create a Run Config from the base config">
        <delete file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml"/>
        <copy file="${basedir}/tests/SimpleRoles/Functional/behat.yml" tofile="${basedir}/tests/SimpleRoles/Functional/behat-run.yml"/>
    </target>

    <target name="behat_config" description="configure for behat" depends="behat-run-config">
        <property name="web_host" value="default"/>
        <property name="web_port" value="default"/>
        <property name="web_path" value=""/>

        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[web_host]" value="${web_host}"/>
        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[web_port]" value="${web_port}"/>
        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[web_path]" value="${web_path}"/>
        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[db_host]" value="${dbhost}"/>
        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[db_port]" value="${dbport}"/>
        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[db_name]" value="${dbname}"/>
    </target>

    <target name="behat_config_local" description="configure for behat" depends="behat-run-config">
        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[web_host]" value="http://127.0.0.1"/>
        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[web_port]" value="80"/>
        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[web_path]" value="sr"/>
        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[db_host]" value="localhost"/>
        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[db_port]" value="3306"/>
        <replace file="${basedir}/tests/SimpleRoles/Functional/behat-run.yml" token="[db_name]" value="simpleRoles"/>
    </target>

    <target name="behat" description="Run through BDD Tests" depends="db:reload, prepare, behat_config">
        <exec executable="behat">
            <arg value="--config"/>
            <arg path="${basedir}/tests/SimpleRoles/Functional/behat-run.yml"/>
        </exec>
    </target>

    <target name="behat-local" description="Run through BDD Tests Locally" depends="db:reload, prepare, behat_config_local">
        <exec executable="behat">
            <arg value="--config"/>
            <arg path="${basedir}/tests/SimpleRoles/Functional/behat-run.yml"/>
        </exec>
    </target>

    <target name="db" depends="db:seed"/>

    <target name="db:init" description="Ensure the DB exists">
        <sql
                driver="com.mysql.jdbc.Driver"
                url="jdbc:mysql://${dbhost}:${dbport}"
                userid="test"
                password=""
                classpath="/usr/share/java/mysql-connector-java.jar"
                src="${basedir}/db/create_db.sql"
                />
    </target>

    <target name="db:reload" description="Reload the Schema" depends="db:init">
        <sql
                driver="com.mysql.jdbc.Driver"
                url="jdbc:mysql://${dbhost}:${dbport}/${dbname}"
                userid="test"
                password=""
                classpath="/usr/share/java/mysql-connector-java.jar"
                src="${basedir}/db/schema.sql"
                />
    </target>

    <target name="db:seed" depends="db:reload" description="Seed Database for Unit Tests">
        <sql
                driver="com.mysql.jdbc.Driver"
                url="jdbc:mysql://${dbhost}:${dbport}/${dbname}"
                userid="test"
                password=""
                classpath="/usr/share/java/mysql-connector-java.jar"
                src="${basedir}/tests/Seeds/users.sql"
                />
        <sql
                driver="com.mysql.jdbc.Driver"
                url="jdbc:mysql://${dbhost}:${dbport}/${dbname}"
                userid="test"
                password=""
                classpath="/usr/share/java/mysql-connector-java.jar"
                src="${basedir}/tests/Seeds/roles.sql"
                />
        <sql
                driver="com.mysql.jdbc.Driver"
                url="jdbc:mysql://${dbhost}:${dbport}/${dbname}"
                userid="test"
                password=""
                classpath="/usr/share/java/mysql-connector-java.jar"
                src="${basedir}/tests/Seeds/user_roles.sql"
                />
    </target>
</project>
